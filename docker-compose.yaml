## Development infrastructure for running and testing the Debezium UI
version: '4'
services:
  zookeeper:
    container_name: zookeeper
    image: quay.io/debezium/zookeeper:latest
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
     - debezium_network

  kafka:
    container_name: kafka
    image: quay.io/debezium/kafka:latest
    depends_on:
     - zookeeper
    ports:
     - 9092:9092
    networks:
     - debezium_network
    # links:
    #  - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181

  debezium-postgres:
    container_name: debezium-postgres
    image: quay.io/debezium/example-postgres
    ports:
     - 5432:5432
    networks:
     - debezium_network
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=debezium

  connect:
    container_name: connect
    image: quay.io/debezium/connect:latest
    ports:
     - 8083:8083
    networks:
     - debezium_network
    # links:
    #  - kafka
    #  - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - ENABLE_DEBEZIUM_KC_REST_EXTENSION=true
     - ENABLE_DEBEZIUM_SCRIPTING=true
     - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension,io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension
     - CONNECT_ACCESS_CONTROL_ALLOW_ORIGIN=*
     - CONNECT_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE
     - CONNECT_ACCESS_CONTROL_ALLOW_HEADERS=origin,content-type,accept,authorization

  debezium-ui:
    container_name: debezium-ui
    image: quay.io/debezium/debezium-ui:latest
    ports:
      - 8080:8080
    networks:
     - debezium_network
    depends_on:
      - connect
    environment:
     - KAFKA_CONNECT_URIS=http://connect:8083
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8081:8080
    networks:
     - debezium_network
    depends_on:
      - connect
      - kafka
    environment:
     - DYNAMIC_CONFIG_ENABLED=true
     - KAFKA_CLUSTERS_0_NAME=local
     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
     - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=postgre
     - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://connect:8083

  watcher:
    container_name: watcher
    image: quay.io/debezium/kafka:latest
    networks:
     - debezium_network
    depends_on:
     - kafka
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
     - KAFKA_BROKER=kafka:9092
    command: watch-topic -a -k dbserver1.inventory.customers

networks:
  default:
    external:
      name: "bridge"
  debezium_network:
    name: debezium_network
    driver: "bridge"
